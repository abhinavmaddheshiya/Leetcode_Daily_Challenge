/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        int ans = -1, height = -1;
        queue<pair<TreeNode*, int>> pq;
        pq.push({root, 0});
        while(!pq.empty()){
            TreeNode* node = pq.front().first;
            int h = pq.front().second;
            pq.pop();
            if(h>height){
                ans = node->val;
                height = h;
            }
            if(node->left)pq.push({node->left, h+1});
            if(node->right)pq.push({node->right, h+1});
        }
        return ans;
    }
};
