/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        queue<pair<TreeNode*, int>> pendingNodes;
        pendingNodes.push({root, 0});
        int currLvl = -1, prev;
        while(!pendingNodes.empty()){
            TreeNode* curr = pendingNodes.front().first;
            int lvl = pendingNodes.front().second;
            pendingNodes.pop();
            if(lvl > currLvl){
                currLvl = lvl;
                prev = curr->val;
                if(lvl%2){
                    if(prev%2)return false;
                }else{
                    if(prev%2==0)return false;
                }
            }else{
                if(lvl%2){
                    if(prev <= curr->val)return false;
                    prev = curr->val;
                    if(prev%2)return false;
                }else{
                    if(prev >= curr->val)return false;
                    prev = curr->val;
                    if(prev%2==0)return false;
                }
            }
            if(curr->left){
                pendingNodes.push({curr->left, lvl+1});
            }
            if(curr->right){
                pendingNodes.push({curr->right, lvl+1});
            }
        }
        return true;
    }
};
