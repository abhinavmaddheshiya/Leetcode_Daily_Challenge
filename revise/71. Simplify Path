class Solution {
public:
    string simplifyPath(string path) {
        int n=path.size(), i=0;
        stack<string> st;
        while(i<n){
            if(path[i]=='/')i++;
            else{
                if(i+2<n && path[i]=='.' && path[i+1]=='.' && path[i+2]=='/'){
                    if(!st.empty())st.pop();
                    i+=2;
                }else if(i+2==n && path[i]=='.' && path[i+1]=='.'){
                    if(!st.empty())st.pop();
                    i+=2;
                }else if(i+1<n && path[i]=='.' && path[i+1]=='/'){
                    i+=2;
                }else if(i+1==n && path[i]=='.'){
                    i++;
                }else{
                    string curr="";
                    while(i<n && path[i]!='/')
                        curr+=path[i++];
                    st.push(curr);
                }
            }
        }
        string ans="";
        while(!st.empty()){
            ans="/"+st.top()+ans;
            st.pop();
        }
        if(ans.size()==0)ans="/";
        return ans;
    }
};
