class Solution {
public:
    int helper(vector<int>& input, int start, int end, int val){
        if(start>end)return -1;
        int mid=(start+end)/2;
        if(input[mid]==val)return mid;
        else if(val<input[mid])return helper(input, start, mid-1,val);
        else{
        return helper(input, mid+1, end,val);
        }
    }
    int search(vector<int>& nums, int target) {
        return helper(nums, 0, nums.size()-1, target);
    }
};
/*int helper(int *input, int start, int end, int val){
    if(start>end)return -1;
    int mid=(start+end)/2;
    if(input[mid]==val)return mid;
    else if(val<input[mid])return helper(input, start, mid-1,val);
    else{
      return helper(input, mid+1, end,val);
    }
}
int binarySearch(int *input, int n, int val)
{
    //Write your code here
    return helper(input, 0, n-1, val);
}*/
